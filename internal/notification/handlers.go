package notification

import (
	"fmt"
	"net/http"
	"net/url"
	"os"
	"time"
)

// SendTelegramNotification –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API.
func SendTelegramNotification(chatID, message string) error {
	token := os.Getenv("TELEGRAM_BOT_TOKEN")
	if token == "" {
		return fmt.Errorf("TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")
	}

	telegramURL := fmt.Sprintf("https://api.telegram.org/bot%s/sendMessage", token)

	// –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è POST –∑–∞–ø—Ä–æ—Å–∞
	data := url.Values{}
	data.Set("chat_id", chatID)
	data.Set("text", message)
	data.Set("parse_mode", "Markdown") // –∏–ª–∏ "MarkdownV2", –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—å

	resp, err := http.PostForm(telegramURL, data)
	if err != nil {
		return err
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —Å—Ç–∞—Ç—É—Å: %d", resp.StatusCode)
	}
	return nil
}

func FormatDateRussian(t time.Time) string {
	months := []string{
		"—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è",
		"–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è",
	}
	day := t.Day()
	month := months[t.Month()-1] // t.Month() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 12
	year := t.Year()
	return fmt.Sprintf("%d %s %d", day, month, year)
}

func FormatDeadline(deadline time.Time) string {
	now := time.Now()
	daysLeft := int(deadline.Sub(now).Hours() / 24)

	var daysText string
	switch {
	case daysLeft < 0:
		return "‚åõÔ∏è –°—Ä–æ–∫ –∏—Å—Ç–µ–∫"
	case daysLeft == 0:
		return "‚è≥ –°–µ–≥–æ–¥–Ω—è –≤ " + deadline.Format("15:04")
	case daysLeft == 1:
		daysText = "1 –¥–µ–Ω—å"
	case daysLeft > 1 && daysLeft < 5:
		daysText = fmt.Sprintf("%d –¥–Ω—è", daysLeft)
	default:
		daysText = fmt.Sprintf("%d –¥–Ω–µ–π", daysLeft)
	}

	return fmt.Sprintf("üìÖ %s (%s –æ—Å—Ç–∞–ª–æ—Å—å)",
		deadline.Format("02.01.2006 –≤ 15:04"),
		daysText,
	)
}
