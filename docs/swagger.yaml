definitions:
  auth.RegisterInput:
    properties:
      name:
        type: string
      role:
        description: '"manager" или "member"'
        enum:
        - manager
        - member
        type: string
      telegram_id:
        type: string
    required:
    - name
    - role
    - telegram_id
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  response.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  response.TeamResponse:
    properties:
      description:
        type: string
      invitelink:
        type: string
      name:
        type: string
    type: object
  team.CreateTeamInput:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  team.InviteJoinRequest:
    properties:
      invite_code:
        type: string
      telegram_id:
        type: string
    required:
    - invite_code
    - telegram_id
    type: object
info:
  contact: {}
  title: Сервис для контроля задачами и встречами команды
paths:
  /auth:
    get:
      consumes:
      - application/json
      description: Проверяет, зарегистрирован ли пользователь по telegram_id. Если
        пользователь найден, возвращает его данные, иначе – сообщение об ошибке.
      parameters:
      - description: Уникальный идентификатор Telegram
        in: query
        name: telegram_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Данные пользователя
          schema:
            $ref: '#/definitions/auth.RegisterInput'
        "400":
          description: Ошибка telegram_id is required
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Проверка авторизации пользователя
      tags:
      - auth
    post:
      consumes:
      - application/json
      description: Регистрация пользователя с помощью уникального telegram_id
      parameters:
      - description: Данные пользователя для регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная регистрация
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Пользователь уже зарегистрирован
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "507":
          description: Не удалось создать пользователя
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - auth
  /team:
    post:
      consumes:
      - application/json
      description: Создает команду, если запрос исходит от пользователя с ролью manager.
      parameters:
      - description: Уникальный идентификатор Telegram
        in: query
        name: telegram_id
        required: true
        type: string
      - description: Данные команды
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/team.CreateTeamInput'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о созданной команде
          schema:
            $ref: '#/definitions/response.TeamResponse'
        "400":
          description: Ошибка валидации или отсутствует telegram_id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Доступ запрещен (не менеджер)
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка создания команды
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Создание команды
      tags:
      - team
  /team/join:
    post:
      consumes:
      - application/json
      description: Позволяет пользователю присоединиться к команде, используя пригласительный
        код.
      parameters:
      - description: Данные для присоединения к команде
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/team.InviteJoinRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное присоединение к команде
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Неверный код приглашения или пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Вы уже присоединились к этой команде
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при присоединении к команде
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Присоединение к команде
      tags:
      - team
swagger: "2.0"
